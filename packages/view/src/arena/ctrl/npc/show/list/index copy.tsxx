// eslint-disable-next-line
import React, { useState, useEffect } from 'react'
import s from './s.module.scss'
import { npc_list$ } from '@/source'
import { useObservable } from 'rxjs-hooks'
import { DetailsList, IDetailsListProps, IColumn } from 'office-ui-fabric-react'
import { gender_decode, date_encode } from '@/util'
import { how_render, columns$, map_npc } from './list-set'
import { map } from 'rxjs/operators'
import { filter$ } from '../subj'

/** 以列表展示 */
export default function ListLike() {
	const columns = useObservable(() => columns$.pipe(map(v => [...v])))
	const list = useObservable(() => npc_list$, [])
	const filter = useObservable(() => filter$.pipe(map(v => ({ ...v }))))
	if (!filter || !columns) {
		return null
	}

	return (
		<div className={s.List}>
			<DetailsList
				columns={columns}
				selectionMode={0}
				items={list
					.filter(npc => {
						// 筛选开始 < 登场时间
						if (filter.active[0] > date_encode(npc.base.active.slice(0, 3))) {
							return false
						}
						//  退场时间 < 筛选结束
						if (date_encode(npc.base.active.slice(3, 6)) > filter.active[1]) {
							return false
						}
						if (filter.name) {
							const reg = new RegExp(filter.name.split('').join('.*'))
							if (!reg.test(npc.base.name)) {
								return false
							}
						}
						return true
					})
					.sort((a, b) => {
						if (columns[1].iconName !== 'Sort') {
							const d1 = date_encode(a.base.active.slice(0, 3))
							const d2 = date_encode(b.base.active.slice(0, 3))
							if (columns[1].iconName === 'Up') {
								return d1 - d2
							} else {
								return d2 - d1
							}
						}

						return 0
					})
					.slice(0, 40)
					.map(map_npc)}
				onRenderItemColumn={how_render}
			></DetailsList>
		</div>
	)
}
